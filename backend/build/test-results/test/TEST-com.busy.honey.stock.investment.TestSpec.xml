<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.busy.honey.stock.investment.TestSpec" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-09-10T06:58:42" hostname="LOCALHOST" time="0.03">
  <properties/>
  <testcase name="be alive" classname="com.busy.honey.stock.investment.TestSpec" time="0.03"/>
  <system-out><![CDATA[Starting a test TestCase(descriptor=TestDescriptor(parent=SpecDescriptor(id=DescriptorId(value=com.busy.honey.stock.investment.TestSpec), kclass=class com.busy.honey.stock.investment.TestSpec), id=DescriptorId(value=this test)), name=TestName(testName=this test, focus=false, bang=false, prefix=null, suffix= should, defaultAffixes=true), spec=com.busy.honey.stock.investment.TestSpec@24f6dfe4, test=io.kotest.core.test.TestScope.() -> kotlin.Unit, source=FileSource(fileName=ATest.kt, lineNumber=16), type=Container, config=ResolvedTestConfig(enabled=(io.kotest.core.test.TestCase) -> io.kotest.core.test.Enabled, invocations=1, threads=1, timeout=null, invocationTimeout=null, tags=[], extensions=[], severity=NORMAL, failfast=false, assertionMode=None, assertSoftly=false, coroutineDebugProbes=false, testCoroutineDispatcher=false, coroutineTestScope=false, blockingTest=false), factoryId=null, parent=null)
Starting a test TestCase(descriptor=TestDescriptor(parent=TestDescriptor(parent=SpecDescriptor(id=DescriptorId(value=com.busy.honey.stock.investment.TestSpec), kclass=class com.busy.honey.stock.investment.TestSpec), id=DescriptorId(value=this test)), id=DescriptorId(value=be alive)), name=TestName(testName=be alive, focus=false, bang=false, prefix=null, suffix=null, defaultAffixes=false), spec=com.busy.honey.stock.investment.TestSpec@24f6dfe4, test=io.kotest.core.test.TestScope.() -> kotlin.Unit, source=FileSource(fileName=ATest.kt, lineNumber=17), type=Test, config=ResolvedTestConfig(enabled=(io.kotest.core.test.TestCase) -> io.kotest.core.test.Enabled, invocations=1, threads=1, timeout=null, invocationTimeout=null, tags=[], extensions=[], severity=NORMAL, failfast=false, assertionMode=None, assertSoftly=false, coroutineDebugProbes=false, testCoroutineDispatcher=false, coroutineTestScope=false, blockingTest=false), factoryId=null, parent=TestCase(descriptor=TestDescriptor(parent=SpecDescriptor(id=DescriptorId(value=com.busy.honey.stock.investment.TestSpec), kclass=class com.busy.honey.stock.investment.TestSpec), id=DescriptorId(value=this test)), name=TestName(testName=this test, focus=false, bang=false, prefix=null, suffix= should, defaultAffixes=true), spec=com.busy.honey.stock.investment.TestSpec@24f6dfe4, test=io.kotest.core.test.TestScope.() -> kotlin.Unit, source=FileSource(fileName=ATest.kt, lineNumber=16), type=Container, config=ResolvedTestConfig(enabled=(io.kotest.core.test.TestCase) -> io.kotest.core.test.Enabled, invocations=1, threads=1, timeout=null, invocationTimeout=null, tags=[], extensions=[], severity=NORMAL, failfast=false, assertionMode=None, assertSoftly=false, coroutineDebugProbes=false, testCoroutineDispatcher=false, coroutineTestScope=false, blockingTest=false), factoryId=null, parent=null))
Johnny5 is alive!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
